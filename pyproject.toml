[build-system]
requires = ["scikit-build-core[pyproject]", "setuptools_scm"]
build-backend = "scikit_build_core.build"

[project]
name = "spykfunc"
dynamic = ["version"]
description = "A PySpark implementation of the Blue Brain Project Functionalizer"
license = {"text" = "Blue Brain Project License"}
authors = [{"name" = "BlueBrain HPC", "email" = "bbp-ou-hpc@epfl.ch"}]
maintainers = [
    {"name" = "Matthias Wolf", "email" = "matthias.wolf@epfl.ch"},
    {"name" = "Fernando Pereira", "email" = "fernando.pereira@epfl.ch"},
]
classifiers = [
    "Development Status :: 4 - Beta",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Framework :: Spark",
    "Topic :: Scientific/Engineering",
    "License :: Other/Proprietary License",
]
readme = "README.rst"
dependencies = [
    "fz-td-recipe>=0.1.3.dev0",
    "h5py",
    "hdfs",
    "jprops",
    "morphio",
    "mpi4py",
    "libsonata",
    "numpy",
    "packaging",
    "pandas",
    "pyarrow<15",
    "pyspark>=3",
]

[project.scripts]
functionalizer = "spykfunc.commands:functionalize_parallel"
spykfunc = "spykfunc.commands:functionalize"
parquet-compare = "spykfunc.tools.compare:run"
parquet-compare-ns = "spykfunc.tools.compare_nodesets:compare_nodesets"
parquet-coalesce = "spykfunc.tools.coalesce:run"

[project.urls]
Homepage = "https://bbpteam.epfl.ch/project/issues/projects/FUNCZ"
Repository = "https://bbpgitlab.epfl.ch/hpc/circuit-building/spykfunc"
Issues = "https://bbpteam.epfl.ch/project/issues/projects/FUNCZ"
Tracker = "https://bbpteam.epfl.ch/project/issues/projects/FUNCZ"

[tool.scikit-build]
wheel.packages = ["src/sparkmanager", "src/spykfunc"]
cmake.source-dir = "src/spykfunc/filters/udfs"
metadata.version.provider = "scikit_build_core.metadata.setuptools_scm"

[tool.setuptools_scm]  # Section required

[tool.ruff]
line-length = 100

[tool.black]
extend-exclude = 'deps\/.*$'
line_length = 100
